buildscript {
    repositories {
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.palantir.jakartapackagealignment:jakarta-package-alignment:0.5.0'
        classpath 'com.gradle.publish:plugin-publish-plugin:1.2.0'
        classpath 'com.palantir.baseline:gradle-baseline-java:4.95.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.9.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.12.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:0.14.0'
    }
}
allprojects {
    apply plugin: 'com.palantir.jakarta-package-alignment'
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.baseline-java-versions'
apply plugin: 'com.palantir.consistent-versions'
apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.external-publish-jar'
apply plugin: 'com.palantir.external-publish-gradle-plugin'

group 'com.palantir.launchconfig'
version gitVersion()

repositories {
    mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
}

dependencies {
    implementation gradleApi()

    testImplementation gradleTestKit()
    testImplementation 'com.netflix.nebula:nebula-test'
    testImplementation('org.spockframework:spock-core') {
        exclude module: 'groovy-all'
    }
}

javaVersions {
    libraryTarget = 11
}

gradlePlugin {
    plugins {
        launchConfig {
            id = 'com.palantir.launch-config'
            implementationClass = 'com.palantir.launchconfig.LaunchConfigPlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/palantir/gradle-launch-config-plugin'
    vcsUrl = 'https://github.com/palantir/gradle-launch-config-plugin'
    description = 'A Gradle Plugin that creates .launch files for JavaExec tasks'
    tags = ['ide']

    plugins {
        launchConfig {
            displayName = 'A Gradle Plugin that creates .launch files for JavaExec tasks'
        }
    }
}
