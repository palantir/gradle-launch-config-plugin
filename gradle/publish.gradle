apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'nebula.info'
apply plugin: 'nebula.javadoc-jar'
apply plugin: 'nebula.maven-publish'
apply plugin: 'nebula.source-jar'

bintray {
    user = System.env.BINTRAY_USERNAME
    key = System.env.BINTRAY_PASSWORD
    publish = true
    pkg {
        repo = 'releases'
        name = 'gradle-launch-config-plugin'
        userOrg = 'palantir'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/palantir/gradle-launch-config-plugin'
        publications = ['nebula']

        githubRepo = 'palantir/gradle-launch-config-plugin'
        githubReleaseNotesFile = 'README.md'
    }
}

bintrayUpload.onlyIf {
    System.env.BINTRAY_USERNAME && System.env.BINTRAY_PASSWORD && project.version ==~ /\d+\.\d+\.\d+/
}

bintrayUpload.dependsOn 'generatePomFileForNebulaPublication', 'build'


pluginBundle {
    website = 'https://github.com/palantir/gradle-launch-config-plugin'
    vcsUrl = 'https://github.com/palantir/gradle-launch-config-plugin'
    description = 'A Gradle Plugin that creates .launch files for Eclipse and Run Configurations for IntelliJ for your project\'s JavaExec tasks.'
    tags = ['idea', 'eclipse', 'launch', 'run', 'javaexec']

    plugins {
        launchConfig {
            id = 'com.palantir.launch-config'
            displayName = 'Launch Config'
        }
    }
}

publishPlugins.onlyIf {
    project.version ==~ /\d+\.\d+\.\d+/
}

publishPlugins.dependsOn 'generatePomFileForNebulaPublication', 'build'
